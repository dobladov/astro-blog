---
import { getCollection } from 'astro:content';
import Main from '#astro/layouts/main/index.astro';
import PageTitle from '#astro/components/PageTitle.astro';

const mapRange = (value: number, fromLow: number, fromHigh: number, toLow:number, toHigh:number) => {
  const fromRange = fromHigh - fromLow;
  const toRange = toHigh - toLow;
  const scale = toRange / fromRange;
  const mappedValue = (value - fromLow) * scale + toLow;
  return mappedValue;
};

const blogs = await getCollection('blog');

const tagCounts = blogs.reduce((tags, blog) => {
    if (blog.data.tags) {
        blog.data.tags.forEach((tag) => {
            tags[tag] = (tags[tag] || 0) + 1;
        });
    }
    return tags;
}, [])

const maxVal = Math.max(...Object.values(tagCounts));
const totalTags = Object.keys(tagCounts).reduce((total) => total + 1, 0);

---
<Main
    title='Tag'
    description='Page for the tag'
>
    <style>
        .tags {
            align-items: center;
            max-width: 64rem;
            margin: 0 auto;
        }

        ul {
            padding: 0;
            display: flex;
            flex-wrap: wrap;
            list-style: none;
            justify-content: center;
            align-items: center;
            gap: 1.5rem;
        }
    </style>

    <PageTitle title={`Tags: [${totalTags}]`} />

    <ul class="tags">
        {Object.entries(tagCounts)
            .sort(([tagA], [tagB]) => tagA.localeCompare(tagB))
            .map(([tag, total], i) => (
            <li>
                <a  
                    tabindex={i === 0 ? 0 : undefined}
                    style={{
                        fontSize: `${mapRange(total, 1, maxVal, 1, 2)}rem`,
                    }}
                    href={`/tags/${tag}`}>
                    {tag} [{total}]
                </a>
            </li>
        ))}
    </ul>
</Main>
